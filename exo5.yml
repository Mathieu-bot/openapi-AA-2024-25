openapi: 3.0.3
info:
  title: Products & Orders API (Auth + Tags)
  version: "1.0.0"

tags:
  - name: Products
    description: Product search and listing
  - name: Orders
    description: Orders management

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    Limit:
      name: limit
      in: query
      description: Maximum number of items to return
      required: false
      schema:
        type: integer
        minimum: 1
        default: 10
      example: 20
    Q:
      name: q
      in: query
      description: Search term
      required: false
      schema:
        type: string
      example: milk
    Page:
      name: page
      in: query
      description: Page number (starts at 1)
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1
    Size:
      name: size
      in: query
      description: Page size (items per page)
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      example: 20
  schemas:
    Product:
      type: object
      required: [name, expiration_datetime, price]
      properties:
        name:
          type: string
          example: "Milk"
        expiration_datetime:
          type: string
          format: date-time
          example: "2025-12-31T23:59:59Z"
        price:
          type: number
          format: float
          example: 2.49
    Order:
      type: object
      required: [identifier, customer_name, creation_datetime, total_amount]
      properties:
        identifier:
          type: integer
          example: 101
        customer_name:
          type: string
          example: "Alice Smith"
        creation_datetime:
          type: string
          format: date-time
          example: "2025-08-31T10:15:00Z"
        total_amount:
          type: number
          format: float
          example: 49.99
    NewOrder:
      type: object
      required: [customer_name, total_amount]
      properties:
        customer_name:
          type: string
          example: "Alice Smith"
        total_amount:
          type: number
          format: float
          example: 49.99

paths:
  /products:
    get:
      tags: [Products]
      summary: Search products
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Q'
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                many:
                  summary: Many products
                  value:
                    - name: "Milk"
                      expiration_datetime: "2025-12-31T23:59:59Z"
                      price: 2.49
                    - name: "Bread"
                      expiration_datetime: "2025-09-15T08:00:00Z"
                      price: 1.20
                empty:
                  summary: No results
                  value: []

  /orders:
    get:
      tags: [Orders]
      summary: List orders (paginated)
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Size'
      responses:
        "200":
          description: List of orders (current page)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              examples:
                page1:
                  summary: First page with two orders
                  value:
                    - identifier: 101
                      customer_name: "Alice Smith"
                      creation_datetime: "2025-08-31T10:15:00Z"
                      total_amount: 49.99
                    - identifier: 102
                      customer_name: "Bob"
                      creation_datetime: "2025-08-31T10:30:00Z"
                      total_amount: 19.99
                empty:
                  summary: No orders
                  value: []
    post:
      tags: [Orders]
      summary: Create an order (requires Basic Auth)
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
            examples:
              create1:
                summary: Simple order to create
                value:
                  customer_name: "Alice Smith"
                  total_amount: 49.99
      responses:
        "201":
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                created:
                  summary: Created order example
                  value:
                    identifier: 201
                    customer_name: "Alice Smith"
                    creation_datetime: "2025-08-31T11:20:00Z"
                    total_amount: 49.99
        "401":
          description: Unauthorized (missing or invalid Basic Auth)
